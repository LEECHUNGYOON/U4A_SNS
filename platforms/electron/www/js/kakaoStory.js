/* ================================================================= */
// ÏÑ§Ïπò npm 
// npm install mime-types
/* ================================================================= */

let MIME = oAPP.remote.require('mime-types');

let OFRAME = null;

let CONFIG = {
    api_url_upload : "https://kapi.kakao.com/v1/api/story/upload/multi",
    api_url_photo  : "https://kapi.kakao.com/v1/api/story/post/photo",
    api_url_note   : "https://kapi.kakao.com/v1/api/story/post/note",
    api_url_link   : "https://kapi.kakao.com/v1/api/story/post/link",
    auth_service   : "http://u4arnd.iptime.org:9403/sns/kakaoStory.html",
    //APP_TOKEN      : "10a4b0e1b6ceadaf8718cb812440a915",
    APP_TOKEN      : "c770fa8a477874d91ed02398b8029ea1",
    permission     : "A"  //F: ÏπúÍµ¨ÏóêÍ≤åÎßå Í≥µÍ∞ú , A: Ï†ÑÏ≤¥ Í≥µÍ∞ú, M: ÎÇòÎßå Î≥¥Í∏∞

}


/* ================================================================= */
// I/F ÌïÑÎìú Ï†ïÏùò 
/* ================================================================= */
/*
var TY_IFDATA = {

    "TITLE": "",      //Ï†úÎ™© 
    "TYPE" : "",      //Î¨∏ÏÑú Ïú†Ìòï
    "DESC" : "",      //ÎÇ¥Ïó≠ 
    "SAMPLE_URL": "", //ÏÉòÌîå URL
    "IMAGE": {
       "URL" :"",     //ÎåÄÌëú Ïù¥ÎØ∏ÏßÄ URL
       "T_URL":[],    //ÏÑúÎ∏å Ïù¥ÎØ∏ÏßÄ URL 
       "DATA": ""     //ÎåÄÌëú Ïù¥ÎØ∏ÏßÄ Data (Base64)
    },
    "VIDEO": {
       "URL"  : "",   //ÎèôÏòÅÏÉÅ URL 
       "FPATH": ""    //ÎèôÏòÅÏÉÅ path(PC ÎîîÎ†âÌÜ†Î¶¨ Í≤ΩÎ°ú)
    },
    "HASHTAG" : []    //Ìï¥ÏãúÌÉúÍ∑∏
};
*/
/* ================================================================= */


/* ================================================================= */
// ÏÇ¨Ïö© ÏòàÏãú 
// var ret = require(oAPP.path.join(__dirname, 'js/kakaoStory.js'));
//     ret.send({});
//                     
// 
/* ================================================================= */



/* ================================================================= */
/* ÎÇ¥Î∂Ä ÌéëÏÖò 
/* ================================================================= */


/*================================================= */
/*  ÎûúÎç§ÌÇ§ ÏÉùÏÑ±  */
/*================================================= */
const _random = (length = 8) => {
    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
    let str = '';
  
    for (let i = 0; i < length; i++) {
      str += chars.charAt(Math.floor(Math.random() * chars.length));
    }
  
    return str;
  
};

/*================================================= */
/* note Ï†ÑÏÜ°                                        */
/*================================================= */
async function _sendNOTE(TOKEN, PARAMS){
    return new Promise(async (resNOTE, rej) => {
       
        //Ïù¥ÎØ∏ÏßÄ Ï†ÑÏÜ° Ï†ïÎ≥¥Í∞Ä Ï°¥Ïû¨ÌïúÎã§Î©¥ ÌïòÏúÑ ÏàòÌñâ Í∏àÏßÄ !!!
        if((typeof PARAMS.IMAGE.FPATH !== "undefined") && PARAMS.IMAGE.FPATH !== ""){ resNOTE({RETCD:"S", RTMSG:""}); return; }
        if(PARAMS.IMAGE.URL != ""){ resNOTE({RETCD:"S", RTMSG:""}); return; }
        
        //note Ï†ÑÏÜ°
        var xhttp = new XMLHttpRequest();
        xhttp.onload  = (e)=>{ 
            var retcd = "S"; 
            var rtmsg = "";
            if(e.target.status != 200){ retcd = "E"; rtmsg = e.target.response; }
            resNOTE({RETCD:retcd, RTMSG:rtmsg}); 
            return; 
        }; 

        xhttp.onerror = (e)=>{ resNOTE({RETCD:"E", RTMSG:e.target.response}); return; };            
        xhttp.open("POST", CONFIG.api_url_note, true);

        //Ï†ÑÏÜ°ÏãúÌÇ¨ Ïù∏Ï¶ù ÌÜ†ÌÅ∞ÌÇ§ Í∞í Íµ¨ÏÑ± 
        const herderToken = "Bearer " + TOKEN;
        xhttp.setRequestHeader("Authorization", herderToken);
        xhttp.setRequestHeader("Content-Type",  "application/x-www-form-urlencoded;charset=utf-8");

        var LCONTENT = "";
            LCONTENT = "‚úÖ " + PARAMS.TITLE + " \n\n "
                     + PARAMS.TYPE + " \n "
                     + PARAMS.DESC + " \n\n ";

            //SAMPLE URL
            if(PARAMS.SAMPLE_URL !== ""){
                LCONTENT = LCONTENT + "ü§© U4A Sample URL \n" + PARAMS.SAMPLE_URL + " \n ";

            }

            //VIDEO URL
            if(PARAMS.VIDEO.URL !== ""){
                LCONTENT = LCONTENT + " \n ‚ñ∂ Video \n" + PARAMS.VIDEO.URL + " \n ";

            }

            //Ï∂îÍ∞Ä Ïù¥ÎØ∏ÏßÄ LINK
            if(PARAMS.IMAGE.T_URL.length != 0){
                LCONTENT = LCONTENT + "\n üíö \n";
                for (var i = 0; i < PARAMS.IMAGE.T_URL.length; i++) {
                    LCONTENT = LCONTENT + PARAMS.IMAGE.T_URL[i] + " \n ";
                    
                }
            }

            //Ìï¥ÏãúÌÉúÍ∑∏
            if(PARAMS.HASHTAG.length != 0){
                LCONTENT = LCONTENT + "\n üíõ \n";
                for (var i = 0; i < PARAMS.HASHTAG.length; i++) {
                    LCONTENT = LCONTENT + PARAMS.HASHTAG[i] + " ";
                }

            }


        //QUERY STRING Ï†ÑÏÜ° -  Î≥∏Î¨∏ Î¨∏ÏûêÏó¥ 2048 ÏïàÏúºÎ°úÎßå Í∞ÄÎä•
        var sendDATA = "permission=" + CONFIG.permission  //A: Ï†ÑÏ≤¥ Í≥µÍ∞ú F: ÏπúÍµ¨ÏóêÍ≤åÎßå Í≥µÍ∞ú M: ÎÇòÎßå Î≥¥Í∏∞
                     + "&content="   + encodeURIComponent(LCONTENT); //Î≥∏Î¨∏

            xhttp.send(sendDATA);

    });
}

/*================================================= */
/* Ïπ¥Ïπ¥Ïò§Ïä§ÌÜ†Î¶¨ ÏÇ¨ÏßÑ Ï†ÑÏÜ°  */
/*================================================= */
async function _sendPHOTO(TOKEN, PARAMS){
    return new Promise(async (resPHOTO, rej) => {

        //ÏÉòÌîå URL Í∞íÏù¥ Ï°¥Ïû¨ÌïúÎã§Î©¥ ÌïòÏúÑ ÏàòÌñâÏ§ëÏßÄ.
        if(PARAMS.SAMPLE_URL !== ""){ resPHOTO({RETCD:"S", RTMSG:""}); return; }

        //Ïù¥ÎØ∏ÏßÄ Ï†ÑÏÜ° Ï†ïÎ≥¥Í∞Ä Ï°¥Ïû¨Ïó¨Î∂Ä Ï†êÍ≤Ä 
        var isIMG = false;
        if((typeof PARAMS.IMAGE.FPATH !== "undefined") && PARAMS.IMAGE.FPATH !== ""){ isIMG = true; }
        if(PARAMS.IMAGE.URL !== ""){  isIMG = true; }

        //ÎßåÏùº Ïù¥ÎØ∏ÏßÄ Ï†ÑÏÜ° Ï†ïÎ≥¥Í∞Ä ÎØ∏Ï°¥Ïû¨Ïãú Ï¢ÖÎ£å
        if(!isIMG){
            resPHOTO({RETCD:"S", RTMSG:""});
            return;
        }

        var xhttp = new XMLHttpRequest();
        xhttp.onload = (e)=>{ 

            //Ïò§Î•ò Î∞úÏÉù
            if(e.target.status != 200){ resPHOTO({RETCD:"E", RTMSG:e.target.response}); return; }
            
            //Ï†ïÏÉÅÏ†ÅÏúºÎ°ú kakao Ï†ÑÏÜ°Ïùº Í≤ΩÏö∞ 
            //Ïπ¥Ïπ¥Ïò§Ï∏°ÏóêÏÑú ÏùëÎãµÏúºÎ°ú ÌååÏùºpathÎ•º Ï§ÄÎã§ (e.target.response)

            //Î¶¨ÌÑ¥Î∞õÏùÄ ÌååÏùºpath Ï†ïÎ≥¥Î°ú Ïπ¥Ïπ¥Ïò§ photo APIÎ°ú Í∏ÄÏùÑ Í≤åÏãúÌïúÎã§!
            var xhttp2 = new XMLHttpRequest();
                xhttp2.onload  = (e)=>{ 
                    var retcd = "S"; 
                    var rtmsg = "";
                    if(e.target.status != 200){ retcd = "E"; rtmsg = e.target.response; }
                    resPHOTO({RETCD:retcd, RTMSG:rtmsg}); 
                    return; 
                }; 
                xhttp2.onerror = (e)=>{ resPHOTO({RETCD:"E", RTMSG:e.target.response}); return; };            
                xhttp2.open("POST", CONFIG.api_url_photo, true);
                xhttp2.setRequestHeader("Authorization", herderToken);
                xhttp2.setRequestHeader("Content-Type", "application/x-www-form-urlencoded;charset=utf-8");

                //Î≥∏Î¨∏ Íµ¨ÏÑ± 
                var LCONTENT = "";
                if(PARAMS.DESC !== ""){ LCONTENT = PARAMS.DESC + " \n "; }

                //Ï∂îÍ∞Ä Ïù¥ÎØ∏ÏßÄ LINK 
                if(PARAMS.IMAGE.T_URL.length != 0){
                    LCONTENT = LCONTENT + "\n üíö \n";
                    for (var i = 0; i < PARAMS.IMAGE.T_URL.length; i++) {
                        LCONTENT = LCONTENT + PARAMS.IMAGE.T_URL[i] + " \n ";
                    
                    }
                }          

                //ÎèôÏòÅÏÉÅ LINK
                if(PARAMS.VIDEO.URL !== ""){
                    LCONTENT = LCONTENT +  " \n ‚ñ∂ \n" + PARAMS.VIDEO.URL + " \n ";
                }
                
                //Ìï¥ÏãúÌÉúÍ∑∏
                if(PARAMS.HASHTAG.length != 0){
                    LCONTENT = LCONTENT + "\n üíõ \n";
                    for (var i = 0; i < PARAMS.HASHTAG.length; i++) {
                        LCONTENT = LCONTENT + PARAMS.HASHTAG[i] + " ";
                    }
                }

                //QUERY STRING Ï†ÑÏÜ° -  Î≥∏Î¨∏ Î¨∏ÏûêÏó¥ 2048 ÏïàÏúºÎ°úÎßå Í∞ÄÎä•
                var sendDATA = "permission=" + CONFIG.permission   //A: Ï†ÑÏ≤¥ Í≥µÍ∞ú F: ÏπúÍµ¨ÏóêÍ≤åÎßå Í≥µÍ∞ú M: ÎÇòÎßå Î≥¥Í∏∞ 
                             + "&image_url_list=" + encodeURIComponent(e.target.response) 
                             + "&content="        + encodeURIComponent(LCONTENT) ;

                xhttp2.send(sendDATA);

        };

        xhttp.onerror = (e)=>{ resPHOTO({RETCD:"E", RTMSG:e.target.response}); return; };            
        xhttp.open("POST", CONFIG.api_url_upload, true);

        //Ï†ÑÏÜ°ÏãúÌÇ¨ Ïù∏Ï¶ù ÌÜ†ÌÅ∞ÌÇ§ Í∞í Íµ¨ÏÑ± 
        const herderToken = "Bearer " + TOKEN;
        xhttp.setRequestHeader("Authorization", herderToken);

        //Ï†ÑÏÜ° form Í∞ùÏ≤¥ ÏÉùÏÑ± 
        let oformData = new FormData();

        //Ïù¥ÎØ∏ÏßÄ Ï†ïÎ≥¥Í∞Ä ÏõπÏÑúÎ≤Ñ URL Î∞©ÏãùÏùº Í≤ΩÏö∞ 
        if(PARAMS.IMAGE.URL !== ""){

            try {
                var resData   = await fetch(PARAMS.IMAGE.URL);
                var byteArray = await resData.arrayBuffer();
        
                let mimeTyp = MIME.lookup(PARAMS.IMAGE.URL);
                if(!mimeTyp){mimeTyp = "";};
        
                let oBin = new Blob([byteArray], {type:mimeTyp});

                let ext  = oAPP.path.extname(PARAMS.IMAGE.URL);
                if(ext == ""){ext = ".png";}

                let fname = _random(20) + ext;
                oformData.append('file', oBin, fname);
        
                xhttp.send(oformData);

            } catch (err) {
                resPHOTO({RETCD:"E", RTMSG:"ÎßÅÌÅ¨Î∞©Ïãù : " + err.toString()}); 
                return;
                
            }

            return;

        } //if(PARAMS.IMAGE.URL !== ""){


        //Î°úÏª¨ ÌååÏùº Ïùº Í≤ΩÏö∞ 
        if(PARAMS.IMAGE.FPATH !== ""){

            try {
                var resData   = oAPP.fs.readFileSync(PARAMS.IMAGE.FPATH , null).buffer;
                var byteArray = new Uint8Array(resData);
        
                let mimeTyp = MIME.lookup(PARAMS.IMAGE.FPATH);
                if(!mimeTyp){mimeTyp = "";};
        
                let oBin = new Blob([byteArray], {type:mimeTyp});

                let ext  = oAPP.path.extname(PARAMS.IMAGE.FPATH);
                if(ext == ""){ext = ".png";}

                let fname = _random(20) + ext;
                oformData.append('file', oBin, fname);
        
                xhttp.send(oformData);

            } catch (err) {
                resPHOTO({RETCD:"E", RTMSG:"ÎßÅÌÅ¨Î∞©Ïãù : " + err.toString()}); 
                return;
                
            }

            return;

        } //if(PARAMS.IMAGE.FPATH !== ""){

    });
}


/*================================================= */
/* Ïπ¥Ïπ¥Ïò§ Ïä§ÌÜ†Î¶¨ ÎßÅÌÅ¨  */
/*================================================= */
async function _sendLINKINFO(TOKEN, PARAMS){
    return new Promise(async (resLINKINFO, rej) => {

        //ÏÉòÌîå URL Í∞íÏù¥ ÎàÑÎùΩÏù¥ÎùºÎ©¥ ÌïòÏúÑ ÏàòÌñâ Í∏àÏßÄ 
        if(PARAMS.SAMPLE_URL === ""){ resLINKINFO({RETCD:"S", RTMSG:""}); return; }
      
        //Ïù¥ÎØ∏ÏßÄ Ï†ÑÏÜ° Ï†ïÎ≥¥Í∞Ä Ï°¥Ïû¨Ïó¨Î∂Ä Ï†êÍ≤Ä 
        var isIMG = false;
        if((typeof PARAMS.IMAGE.FPATH !== "undefined") && PARAMS.IMAGE.FPATH !== ""){ isIMG = true; }
        if(PARAMS.IMAGE.URL !== ""){  isIMG = true; }

        //ÎßåÏùº Ïù¥ÎØ∏ÏßÄ Ï†ÑÏÜ° Ï†ïÎ≥¥Í∞Ä ÎØ∏Ï°¥Ïû¨Ïãú Ï¢ÖÎ£å
        if(!isIMG){
            resLINKINFO({RETCD:"S", RTMSG:""});
            return;
        }
        
        var xhttp = new XMLHttpRequest();
        xhttp.onload = async (e)=>{ 
            
            //Ïò§Î•ò Î∞úÏÉù
            if(e.target.status != 200){ resLINKINFO({RETCD:"E", RTMSG:e.target.response}); return; }

            //Ï†ïÏÉÅÏ†ÅÏúºÎ°ú kakao Ï†ÑÏÜ°Ïùº Í≤ΩÏö∞ 
            //Ïπ¥Ïπ¥Ïò§Ï∏°ÏóêÏÑú ÏùëÎãµÏúºÎ°ú ÌååÏùºpathÎ•º Ï§ÄÎã§ (e.target.response)

            //Î¶¨ÌÑ¥Î∞õÏùÄ ÌååÏùºpath Ï†ïÎ≥¥Î°ú Ïπ¥Ïπ¥Ïò§ photo APIÎ°ú Í∏ÄÏùÑ Í≤åÏãúÌïúÎã§!
            var xhttp2 = new XMLHttpRequest();
                xhttp2.onload  = (e)=>{ 
                   
                    var retcd = "S"; 
                    var rtmsg = "";
                    if(e.target.status != 200){ retcd = "E"; rtmsg = e.target.response; }
                    resLINKINFO({RETCD:retcd, RTMSG:rtmsg}); 
                    return; 
                }; 
                xhttp2.onerror = (e)=>{ resLINKINFO({RETCD:"E", RTMSG:e.target.response}); return; };            
                xhttp2.open("POST", CONFIG.api_url_link, true);
                xhttp2.setRequestHeader("Authorization", herderToken);
                xhttp2.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");

                //Ïπ¥Ïπ¥Ïò§Ïä§ÌÜ†ÎßÅ ÎßÅÌÅ¨ Ï†ÑÏÜ° Í∞í Íµ¨ÏÑ± 
                var link_data = {};

                    //ÏÉòÌîå URL 
                    link_data.url = PARAMS.SAMPLE_URL;
                    if(link_data.url === ""){  link_data.url = "https://www.u4ainfo.com"; }

                    link_data.host          = "www.u4ainfo.com";
                    link_data.requested_url = "";

                    //ÌÉÄÏù¥ÌãÄ
                    link_data.title         = "‚úÖ " + PARAMS.TITLE;

                    //ÎßÅÌÅ¨ Ïù¥ÎØ∏ÏßÄ URL Ï†ÑÏÜ°
                    link_data.image = [];
                    var T_IMGS = JSON.parse(e.target.response);
                    for (var i = 0; i < T_IMGS.length; i++) {
                        link_data.image.push("http://dn-l1-story.kakao.co.kr/dn" + T_IMGS[i]);
                    }

                    //ÎÇ¥Ïó≠ = Î¨∏ÏÑúÏú†Ìòï
                    link_data.description = PARAMS.TYPE;

                    //Ïπ¥Ïπ¥Ïò§ÌÜ°Ïä§ÌÜ†Î¶¨ Ï†ÑÏÜ° Í≥†Ï†ïÍ∞í ÏÑ§Ï†ï 
                    link_data.type    = "website";
                    link_data.section = "";

                    //content = Î≥∏Î¨∏ 
                    var LCONTENT = "";
                    if(PARAMS.DESC !== ""){ LCONTENT = PARAMS.DESC + " \n "; }

                    //Ï∂îÍ∞Ä Ïù¥ÎØ∏ÏßÄ LINK 
                    if(PARAMS.IMAGE.T_URL.length != 0){
                        LCONTENT = LCONTENT + "\n üíö \n";
                        for (var i = 0; i < PARAMS.IMAGE.T_URL.length; i++) {
                            LCONTENT = LCONTENT + PARAMS.IMAGE.T_URL[i] + " \n ";
                        
                        }
                    }
                    
                    //ÎèôÏòÅÏÉÅ LINK
                    if(PARAMS.VIDEO.URL !== ""){
                        LCONTENT = LCONTENT +  " \n ‚ñ∂ \n" + PARAMS.VIDEO.URL + " \n ";
                    }
                    
                    //Ìï¥ÏãúÌÉúÍ∑∏
                    if(PARAMS.HASHTAG.length != 0){
                        LCONTENT = LCONTENT + "\n üíõ \n";
                        for (var i = 0; i < PARAMS.HASHTAG.length; i++) {
                            LCONTENT = LCONTENT + PARAMS.HASHTAG[i] + " ";
                        }
                    }

                var sendLinkData = JSON.stringify(link_data);
                    sendLinkData = "permission=" + CONFIG.permission   //A: Ï†ÑÏ≤¥ Í≥µÍ∞ú F: ÏπúÍµ¨ÏóêÍ≤åÎßå Í≥µÍ∞ú M: ÎÇòÎßå Î≥¥Í∏∞
                                 + "&link_info=" + encodeURIComponent(sendLinkData) 
                                 + "&content=" + encodeURIComponent(LCONTENT);
               
                xhttp2.send(sendLinkData);

        };

        xhttp.onerror = (e)=>{ resLINKINFO({RETCD:"E", RTMSG:e.target.response}); return; };            
        xhttp.open("POST", CONFIG.api_url_upload, true);

        //Ï†ÑÏÜ°ÏãúÌÇ¨ Ïù∏Ï¶ù ÌÜ†ÌÅ∞ÌÇ§ Í∞í Íµ¨ÏÑ± 
        const herderToken = "Bearer " + TOKEN;
        xhttp.setRequestHeader("Authorization", herderToken);

        //Ï†ÑÏÜ° form Í∞ùÏ≤¥ ÏÉùÏÑ± 
        let oformData = new FormData();
 
        //Ïù¥ÎØ∏ÏßÄ Ï†ïÎ≥¥Í∞Ä ÏõπÏÑúÎ≤Ñ URL Î∞©ÏãùÏùº Í≤ΩÏö∞ 
        if(PARAMS.IMAGE.URL !== ""){

            try {
                var resData   = await fetch(PARAMS.IMAGE.URL);
                var byteArray = await resData.arrayBuffer();
        
                let mimeTyp = MIME.lookup(PARAMS.IMAGE.URL);
                if(!mimeTyp){mimeTyp = "";};
        
                let oBin = new Blob([byteArray], {type:mimeTyp});

                let ext  = oAPP.path.extname(PARAMS.IMAGE.URL);
                if(ext == ""){ext = ".png";}

                let fname = _random(20) + ext;
                oformData.append('file', oBin, fname);
        
                xhttp.send(oformData);

            } catch (err) {
                resLINKINFO({RETCD:"E", RTMSG:"ÎßÅÌÅ¨Î∞©Ïãù : " + err.toString()}); 
                return;
                
            }

            return;

        } //if(PARAMS.IMAGE.URL !== ""){


        //Î°úÏª¨ ÌååÏùº Ïùº Í≤ΩÏö∞ 
        if(PARAMS.IMAGE.FPATH !== ""){

            try {
                var resData   = oAPP.fs.readFileSync(PARAMS.IMAGE.FPATH , null).buffer;
                var byteArray = new Uint8Array(resData);
        
                let mimeTyp = MIME.lookup(PARAMS.IMAGE.FPATH);
                if(!mimeTyp){mimeTyp = "";};
        
                let oBin = new Blob([byteArray], {type:mimeTyp});

                let ext  = oAPP.path.extname(PARAMS.IMAGE.FPATH);
                if(ext == ""){ext = ".png";}

                let fname = _random(20) + ext;
                oformData.append('file', oBin, fname);
        
                xhttp.send(oformData);

            } catch (err) {
                resLINKINFO({RETCD:"E", RTMSG:"ÎßÅÌÅ¨Î∞©Ïãù : " + err.toString()}); 
                return;
                
            }

            return;

        } //if(PARAMS.IMAGE.FPATH !== ""){


    });
}


/* ================================================================= */
/* Export Module Function 
/* ================================================================= */
exports.send = async function(sParams){

    return new Promise((resolve, reject) => {

        //[ÌéëÏÖò]ÏûêÏãù frame ÌÜµÏã† callback Ìï®Ïàò
        async function onMsgCB(params){

            debugger;
            
            //frame ÌÜµÏã† Ïù¥Î≤§Ìä∏ Ï†úÍ±∞ 
            window.removeEventListener('message', onMsgCB);

            //Î°úÍ∑∏Ïù∏ Ïù∏Ï¶ù Ïò§Î•òÏãú
            if(typeof params.data == "undefined"){ resolve([{RETCD:"E", RTMSG:"Ïπ¥Ïπ¥Ïò§ Î°úÍ∑∏Ïù∏ Ïù∏Ï¶ùÏã§Ìå®"}]);  return; }
            if(typeof params.data.RETCD == "undefined"){ resolve([{RETCD:"E", RTMSG:"Ïπ¥Ïπ¥Ïò§ Î°úÍ∑∏Ïù∏ Ïù∏Ï¶ùÏã§Ìå®"}]);  return; }
            if(params.data.RETCD == "E"){ resolve([params.data]); return; }

            var T_MSG = [];

            /* note Ï†ÑÏÜ° */
            var S_RET = await _sendNOTE(params.data.TOKEN, sParams);
                T_MSG.push(S_RET);


            /* note + ÏÇ¨ÏßÑ Ï†ÑÏÜ° */
            var S_RET = await _sendPHOTO(params.data.TOKEN, sParams);
                T_MSG.push(S_RET);
     

            /* Ïπ¥Ïπ¥Ïò§Ïä§ÌÜ†Î¶¨ ÎßÅÌÅ¨  */
            var S_RET = await _sendLINKINFO(params.data.TOKEN, sParams);
                T_MSG.push(S_RET);

                //Ïò§Î•òÍ±¥Îßå Î¶¨ÌÑ¥
                resolve(T_MSG.filter(e=> e.RETCD === "E"));

        }

 
        //ÏûêÏãù frame ÌÜµÏã† Ïù¥Î≤§Ìä∏ ÏÑ§Ï†ï 
        window.addEventListener('message', onMsgCB);
  

        //Ïπ¥Ïπ¥Ïò§ Ïä§ÌÜ†Î¶¨ Ï≤òÎ¶¨ URL Ìò∏Ï∂ú
        OFRAME = document.getElementById("kakaologin");
        
        //frame Î°úÎî© Ï†ïÏÉÅ ÏàòÌñâÏãú 
        OFRAME.onload = function(e){

            //ÏûêÏãù ÏòÅÏó≠ Ï†ëÍ∑º 
            var contentWin = e.currentTarget.contentWindow;

            //frame Î°úÎî© Ïã§Ìå®
            if(typeof contentWin === "undefined"){
                resolve([{RETCD:"E", RTMSG:"Ïπ¥Ïπ¥Ïò§ Î°úÍ∑∏Ïù∏ ÏÑúÎπÑÏä§ URL Î°úÎìú Ïã§Ìå®"}]); 
                return;
            }
            
            //frame Î°úÎî© Ïã§Ìå®
            if(typeof contentWin.gfn_Auth === "undefined"){
                resolve([{RETCD:"E", RTMSG:"Ïπ¥Ïπ¥Ïò§ Î°úÍ∑∏Ïù∏ ÏÑúÎπÑÏä§ URL Î°úÎìú Ïã§Ìå®"}]); 
                return;
            }

            var PARAMS = {"TOKEN":CONFIG.APP_TOKEN};
            contentWin.gfn_Auth(PARAMS);
           
        };

        //frame Î°úÎî© Ïã§Ìå® 
        OFRAME.onerror = function(e){
            resolve([{RETCD:"E", RTMSG:"Ïπ¥Ïπ¥Ïò§ Î°úÍ∑∏Ïù∏ ÏÑúÎπÑÏä§ URL Î°úÎìú Ïã§Ìå®"}]); 
            return;
           
        };
        
        OFRAME.src = CONFIG.auth_service;


    });//return new Promise((resolve, reject) => {

}; //exports.send = async function(sParams){